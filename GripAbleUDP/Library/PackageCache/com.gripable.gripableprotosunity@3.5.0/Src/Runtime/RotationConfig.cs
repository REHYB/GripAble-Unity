// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RotationConfig.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protos {

  /// <summary>Holder for reflection information generated from RotationConfig.proto</summary>
  public static partial class RotationConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for RotationConfig.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RotationConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRSb3RhdGlvbkNvbmZpZy5wcm90bxITY29tLmdyaXBhYmxlLnByb3RvcxoS",
            "UmVnaW9uQ29uZmlnLnByb3RvIo8BCg5Sb3RhdGlvbkNvbmZpZxIyCgdyZWdp",
            "b25BGAEgASgLMiEuY29tLmdyaXBhYmxlLnByb3Rvcy5SZWdpb25Db25maWcS",
            "MgoHcmVnaW9uQhgCIAEoCzIhLmNvbS5ncmlwYWJsZS5wcm90b3MuUmVnaW9u",
            "Q29uZmlnEhUKDXRpbWVUaHJlc2hvbGQYAyABKAVCIAoTY29tLmdyaXBhYmxl",
            "LnByb3Rvc1ABqgIGUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Protos.RegionConfigReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.RotationConfig), global::Protos.RotationConfig.Parser, new[]{ "RegionA", "RegionB", "TimeThreshold" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RotationConfig : pb::IMessage<RotationConfig> {
    private static readonly pb::MessageParser<RotationConfig> _parser = new pb::MessageParser<RotationConfig>(() => new RotationConfig());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RotationConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.RotationConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RotationConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RotationConfig(RotationConfig other) : this() {
      RegionA = other.regionA_ != null ? other.RegionA.Clone() : null;
      RegionB = other.regionB_ != null ? other.RegionB.Clone() : null;
      timeThreshold_ = other.timeThreshold_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RotationConfig Clone() {
      return new RotationConfig(this);
    }

    /// <summary>Field number for the "regionA" field.</summary>
    public const int RegionAFieldNumber = 1;
    private global::Protos.RegionConfig regionA_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.RegionConfig RegionA {
      get { return regionA_; }
      set {
        regionA_ = value;
      }
    }

    /// <summary>Field number for the "regionB" field.</summary>
    public const int RegionBFieldNumber = 2;
    private global::Protos.RegionConfig regionB_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.RegionConfig RegionB {
      get { return regionB_; }
      set {
        regionB_ = value;
      }
    }

    /// <summary>Field number for the "timeThreshold" field.</summary>
    public const int TimeThresholdFieldNumber = 3;
    private int timeThreshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TimeThreshold {
      get { return timeThreshold_; }
      set {
        timeThreshold_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RotationConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RotationConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RegionA, other.RegionA)) return false;
      if (!object.Equals(RegionB, other.RegionB)) return false;
      if (TimeThreshold != other.TimeThreshold) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (regionA_ != null) hash ^= RegionA.GetHashCode();
      if (regionB_ != null) hash ^= RegionB.GetHashCode();
      if (TimeThreshold != 0) hash ^= TimeThreshold.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (regionA_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RegionA);
      }
      if (regionB_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegionB);
      }
      if (TimeThreshold != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TimeThreshold);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (regionA_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegionA);
      }
      if (regionB_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegionB);
      }
      if (TimeThreshold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeThreshold);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RotationConfig other) {
      if (other == null) {
        return;
      }
      if (other.regionA_ != null) {
        if (regionA_ == null) {
          regionA_ = new global::Protos.RegionConfig();
        }
        RegionA.MergeFrom(other.RegionA);
      }
      if (other.regionB_ != null) {
        if (regionB_ == null) {
          regionB_ = new global::Protos.RegionConfig();
        }
        RegionB.MergeFrom(other.RegionB);
      }
      if (other.TimeThreshold != 0) {
        TimeThreshold = other.TimeThreshold;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (regionA_ == null) {
              regionA_ = new global::Protos.RegionConfig();
            }
            input.ReadMessage(regionA_);
            break;
          }
          case 18: {
            if (regionB_ == null) {
              regionB_ = new global::Protos.RegionConfig();
            }
            input.ReadMessage(regionB_);
            break;
          }
          case 24: {
            TimeThreshold = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
