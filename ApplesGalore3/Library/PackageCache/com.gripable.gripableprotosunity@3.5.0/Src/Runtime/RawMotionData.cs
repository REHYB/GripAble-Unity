// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RawMotionData.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protos {

  /// <summary>Holder for reflection information generated from RawMotionData.proto</summary>
  public static partial class RawMotionDataReflection {

    #region Descriptor
    /// <summary>File descriptor for RawMotionData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RawMotionDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNSYXdNb3Rpb25EYXRhLnByb3RvEhNjb20uZ3JpcGFibGUucHJvdG9zGhdB",
            "Y2NlbGVyb21ldGVyRGF0YS5wcm90bxoTR3lyb3Njb3BlRGF0YS5wcm90bxoW",
            "TWFnbmV0b21ldGVyRGF0YS5wcm90byLVAQoNUmF3TW90aW9uRGF0YRI9Cg1h",
            "Y2NlbGVyb21ldGVyGAEgASgLMiYuY29tLmdyaXBhYmxlLnByb3Rvcy5BY2Nl",
            "bGVyb21ldGVyRGF0YRI1CglneXJvc2NvcGUYAiABKAsyIi5jb20uZ3JpcGFi",
            "bGUucHJvdG9zLkd5cm9zY29wZURhdGESOwoMbWFnbmV0b21ldGVyGAMgASgL",
            "MiUuY29tLmdyaXBhYmxlLnByb3Rvcy5NYWduZXRvbWV0ZXJEYXRhEhEKCXRp",
            "bWVzdGFtcBgEIAEoBUIgChNjb20uZ3JpcGFibGUucHJvdG9zUAGqAgZQcm90",
            "b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Protos.AccelerometerDataReflection.Descriptor, global::Protos.GyroscopeDataReflection.Descriptor, global::Protos.MagnetometerDataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.RawMotionData), global::Protos.RawMotionData.Parser, new[]{ "Accelerometer", "Gyroscope", "Magnetometer", "Timestamp" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RawMotionData : pb::IMessage<RawMotionData> {
    private static readonly pb::MessageParser<RawMotionData> _parser = new pb::MessageParser<RawMotionData>(() => new RawMotionData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RawMotionData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.RawMotionDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawMotionData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawMotionData(RawMotionData other) : this() {
      Accelerometer = other.accelerometer_ != null ? other.Accelerometer.Clone() : null;
      Gyroscope = other.gyroscope_ != null ? other.Gyroscope.Clone() : null;
      Magnetometer = other.magnetometer_ != null ? other.Magnetometer.Clone() : null;
      timestamp_ = other.timestamp_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RawMotionData Clone() {
      return new RawMotionData(this);
    }

    /// <summary>Field number for the "accelerometer" field.</summary>
    public const int AccelerometerFieldNumber = 1;
    private global::Protos.AccelerometerData accelerometer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.AccelerometerData Accelerometer {
      get { return accelerometer_; }
      set {
        accelerometer_ = value;
      }
    }

    /// <summary>Field number for the "gyroscope" field.</summary>
    public const int GyroscopeFieldNumber = 2;
    private global::Protos.GyroscopeData gyroscope_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.GyroscopeData Gyroscope {
      get { return gyroscope_; }
      set {
        gyroscope_ = value;
      }
    }

    /// <summary>Field number for the "magnetometer" field.</summary>
    public const int MagnetometerFieldNumber = 3;
    private global::Protos.MagnetometerData magnetometer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Protos.MagnetometerData Magnetometer {
      get { return magnetometer_; }
      set {
        magnetometer_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 4;
    private int timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RawMotionData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RawMotionData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Accelerometer, other.Accelerometer)) return false;
      if (!object.Equals(Gyroscope, other.Gyroscope)) return false;
      if (!object.Equals(Magnetometer, other.Magnetometer)) return false;
      if (Timestamp != other.Timestamp) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (accelerometer_ != null) hash ^= Accelerometer.GetHashCode();
      if (gyroscope_ != null) hash ^= Gyroscope.GetHashCode();
      if (magnetometer_ != null) hash ^= Magnetometer.GetHashCode();
      if (Timestamp != 0) hash ^= Timestamp.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (accelerometer_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Accelerometer);
      }
      if (gyroscope_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Gyroscope);
      }
      if (magnetometer_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Magnetometer);
      }
      if (Timestamp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Timestamp);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (accelerometer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Accelerometer);
      }
      if (gyroscope_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gyroscope);
      }
      if (magnetometer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Magnetometer);
      }
      if (Timestamp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Timestamp);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RawMotionData other) {
      if (other == null) {
        return;
      }
      if (other.accelerometer_ != null) {
        if (accelerometer_ == null) {
          accelerometer_ = new global::Protos.AccelerometerData();
        }
        Accelerometer.MergeFrom(other.Accelerometer);
      }
      if (other.gyroscope_ != null) {
        if (gyroscope_ == null) {
          gyroscope_ = new global::Protos.GyroscopeData();
        }
        Gyroscope.MergeFrom(other.Gyroscope);
      }
      if (other.magnetometer_ != null) {
        if (magnetometer_ == null) {
          magnetometer_ = new global::Protos.MagnetometerData();
        }
        Magnetometer.MergeFrom(other.Magnetometer);
      }
      if (other.Timestamp != 0) {
        Timestamp = other.Timestamp;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (accelerometer_ == null) {
              accelerometer_ = new global::Protos.AccelerometerData();
            }
            input.ReadMessage(accelerometer_);
            break;
          }
          case 18: {
            if (gyroscope_ == null) {
              gyroscope_ = new global::Protos.GyroscopeData();
            }
            input.ReadMessage(gyroscope_);
            break;
          }
          case 26: {
            if (magnetometer_ == null) {
              magnetometer_ = new global::Protos.MagnetometerData();
            }
            input.ReadMessage(magnetometer_);
            break;
          }
          case 32: {
            Timestamp = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
